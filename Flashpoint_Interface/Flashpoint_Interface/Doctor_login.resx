<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EwAACxMBAJqcGAAABQZJREFUeF7t3cmKJGUUxfHCeVqpDY5bEcSd4EM40DY+hDiAw0J0J6L4ACIo7gWH
        d2hw0Y1iI4pbBxTBGWecPQcM4lCcrsisypv59fX84QdNa9UX98uqrIzIrOy9lFJKKaWUUkoppZRSSiml
        lFJKKaWUUkoppXOk8+F2eAxehjfhY/gGfv8P/8y/43/j//Mo8GP4sekc7CI4AW/A9/DPIfFjX4fjwM+Z
        Bu9qeAb4He1u0KP4Gp6GqyAN1uXwHPwM7sbbpJ+AX2SXQRqge+BTcDdWpU/gbkg76hJ4CdyNs00vwMWQ
        ttgN8C64G2QX3oHrIG2hm4F3v+6G2KWP4CZIhfHG/xLcDXCQv+AU8MEbHzPcAlcCT+2If+bf8dTxWTgN
        /Bj3uQ7yBeSLoCje7a/7nc8Hh4/D9bBuXO8J+Azc5z4b3hNcC2mD8QHfOj/zec5+H2zi4g0/x/2wzrUF
        PibIA8MN9iK4jXZegYqLNbzI9Cq4NZ3nIW0g/sx2G7zfH8Dv+uoegD/BHcN+d0I6QlfAKhd5foE7YFvd
        Bb+COxbFxwO5YniEeHnXbazid/42b/wpXgVc5Z6Azx+kQ3QMVrm2v427/bP1ELhjUj8CTzPTmvGc3W2o
        4gO+XfcauGNTT0FaI556LZ128VRvhKdmeU/1LbhjnHwFF0JaMV6RcxupdnnXv79VfhTkmcM14it53CZO
        eGawiYs8m4oXfT4Hd6wTXkNIK3QB/ABuEye8vDtaT4I71sl3cB6khfhiTLeBEz5Jc5hr+9XdCH+DO+bJ
        bZAW4qt33eZN+KzeqL0F7pgnD0NaiC/Ldps34enhqC1duOJzGmkhvjbfbd6Ezw2M2r3gjnlyEtJC/AUN
        t3kTvnBj1G4Fd8yTDyEttHQBaOTLqnzK2B3zhBeE0kL8VS23eZORzv/3x+sB7pgnv0FayG2cGj13zCot
        5DZNjZ47ZpUWcpumRs8ds0oLuU1To+eOWaWF3Kap0XPHrNJCbtPU6LljVmkht2lq9Nwxq7SQ2zQ1eu6Y
        1f8+tykxa58bOmbtc0PHrH1u6Ji1zw0ds/a5oWPWPjd0zNrnho5Z+9zQqntuZtU+N7TqnptZtc8Nrbrn
        Zlbtc0Or7rmZVfvc0Kp7bmbVPje06p6bWbXPDa2652ZW7XNDq+65mVX73NCqukuBv4F8BviLGsR39nwE
        +I6k1bmZVfvc0Koy/g7/B+DWpfeB7xFcmVtXtc8Nrarid/5BN/7kPah8n1+3pmqfG1pVtfTGE6ryjRzc
        eqp9bmhVFX/mu/Wct6Eqt55qnxtaVcUHe249h+8DXJVbT7XPDa2qyhfAILmhVVXr/Ajgmz1V5dZT7XND
        q6p4nu/Wcx6Eqtx6qn1uaFUVT+1W+WdneFGo8n193ZqqfW5oVRn/MSe3proGKnNrqva5oVV1bk1VnVtT
        tc8Nrapza6rq3JqqfW5oVZ1bU1Xn1lTtc0Or6tyaqjq3pmqfG1pV59ZU1bk1Vfvc0Ko6t6aqzq2p2ueG
        VtW5NVV1bk3VPje0qs6tqapza6r2uaFVdW5NVZ1bU7XPDa2652ZW7XNDq+65mVX73NCqe25m1T43tOqe
        m1m1zw2tuudmVu1zQ6vuuZlV+9zQqntuZtU+N7TqnptZtc8NHbP2uaFj1j43dMza54aOWfvc0DFrnxs6
        Zu1zQ8esfW7omKWUUkoppZRSSimllFJKKaWUUkoppZRSSimt2d7ev8ZyRfFIIAOUAAAAAElFTkSuQmCC
</value>
  </data>
</root>